SELECT * FROM aluno;
SELECT * FROM curso;
SELECT * FROM aluno_curso;

UPDATE aluno SET id = 20 WHERE id = 4;

DROP TABLE aluno_curso;

CREATE TABLE aluno_curso
(
	aluno_id INTEGER,
	curso_id INTEGER,
	
	PRIMARY KEY (aluno_id, curso_id),
	
	FOREIGN KEY (aluno_id)
		REFERENCES aluno(id)
	ON DELETE CASCADE
	ON UPDATE CASCADE
	,
	FOREIGN KEY (curso_id)
		REFERENCES curso(id)
);

INSERT INTO aluno_curso (aluno_id, curso_id) VALUES (2, 1);
INSERT INTO aluno_curso (aluno_id, curso_id) VALUES (3, 1);


SELECT 
	aluno.id  AS aluno_id,
	aluno.nome AS "Nome do aluno",
	curso.id AS curso_id,
	curso.nome AS "Nome do curso"
FROM aluno
JOIN aluno_curso ON aluno_curso.aluno_id = aluno.id
JOIN curso ON curso.id = aluno_curso.curso_id

UPDATE aluno SET id = 10 WHERE id = 2;

CREATE TABLE funcionarios 
(
	id SERIAL PRIMARY KEY,
	matricula VARCHAR(10),
	nome VARCHAR(255),
	sobrenome VARCHAR(255)
);

INSERT INTO funcionarios (matricula, nome, sobrenome) VALUES ('M001', 'Diogo', 'Mascarenhas');
INSERT INTO funcionarios (matricula, nome, sobrenome) VALUES ('M002', 'Vinícius', 'Dias');
INSERT INTO funcionarios (matricula, nome, sobrenome) VALUES ('M003', 'Nico', 'Steppat');
INSERT INTO funcionarios (matricula, nome, sobrenome) VALUES ('M004', 'João', 'Roberto');
INSERT INTO funcionarios (matricula, nome, sobrenome) VALUES ('M005', 'Diogo', 'Mascarenhas');
INSERT INTO funcionarios (matricula, nome, sobrenome) VALUES ('M006', 'Alberto', 'Martins');
INSERT INTO funcionarios (matricula, nome, sobrenome) VALUES ('M007', 'Diogo', 'Oliveira');



SELECT * FROM funcionarios ORDER BY 4 DESC, nome DESC, 2 ASC;


SELECT 
	aluno.id  AS aluno_id,
	aluno.nome AS "Nome do aluno",
	curso.id AS curso_id,
	curso.nome AS "Nome do curso"
FROM aluno
JOIN aluno_curso ON aluno_curso.aluno_id = aluno.id
JOIN curso ON curso.id = aluno_curso.curso_id
ORDER BY curso.nome, aluno.nome DESC


INSERT INTO aluno_curso (aluno_id, curso_id) VALUES (20, 3);


SELECT * FROM funcionarios 
ORDER BY id 
LIMIT 5
OFFSET 1
;

SELECT COUNT(id),
		SUM(id),
		MAX(id),
		MIN(id),
		ROUND(AVG(id), 0)
FROM funcionarios
;


SELECT
	   nome,
	   sobrenome,
	   COUNT(id)
FROM funcionarios
GROUP BY 1, 2
ORDER BY nome;



SELECT curso.nome AS "Nome do Curso",
COUNT(aluno.id)
FROM aluno
JOIN aluno_curso ON aluno_curso.aluno_id = aluno.id
JOIN curso ON curso.id = aluno_curso.curso_id
GROUP BY 1
ORDER BY 1
;

SELECT * FROM aluno;
SELECT * FROM aluno_curso;
SELECT * FROM curso;

SELECT curso.nome AS "Nome do curso",
		COUNT (aluno.id)
FROM curso
LEFT JOIN aluno_curso ON aluno_curso.curso_id = curso.id
LEFT JOIN aluno ON aluno.id = aluno_curso.aluno_id 
GROUP BY 1
HAVING COUNT (aluno.id) > 0
;



SELECT nome,
		COUNT(id)
FROM funcionarios
GROUP BY 1
HAVING COUNT (id) = 1;







SHOW TIMEZONE;
SELECT * FROM pg_timezone_names ORDER BY 3 OFFSET 400;

SET timezone = 'Etc/GMT+3';
SELECT * FROM articles;

DROP TABLE articles

CREATE TABLE articles
(
	id SERIAL PRIMARY KEY,
	title VARCHAR (50),
	body TEXT,
	created timestamptz ,
	modified timestamptz
);


INSERT INTO articles (title, body, created)
    VALUES ('The title', 'This is the article body.', current_timestamp);
INSERT INTO articles (title,body,created)
    VALUES ('A title once again', 'And the article body follows.', NOW());
INSERT INTO articles (title,body,created)
    VALUES ('Title strikes back', 'This is really exciting! Not.', NOW());

